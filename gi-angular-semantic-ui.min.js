/**
 * gi-semantic-ui-angular - 1.0.0
 * Angular1 Directives for Semantic UI
 * 
 * https://github.com/ginvoicing/gi-semantic-ui-angular
 * Released under the MIT license.
 * Copyright 2018 Ginvoicing and contributors.
 */
angular.module("semantic-ui",["semantic-ui-core","semantic-ui-checkbox","semantic-ui-radio","semantic-ui-dropdown"]),function(e){function n(e){var n={setDefaultFunction:function(e,n,t,i){t[n]||(e[n]=i)},triggerChange:function(e,n,t,i){e.$watch(n,function(n){i&&e.$evalAsync(function(){t.trigger("change")}),i=!0})},bindAttribute:function(e,n,t,i){e.$watch(n,function(e){t.attr(i,e)})},onEvent:function(e,n,t){e[n]=function(e,n){return function(){var i=n;angular.isFunction(e)&&(i=e.apply(this,arguments));var o=t.apply(this,arguments);return i!==n?i:o}}(e[n])},linkEvents:function(e,t,i,o){for(var a in o)!function(o,a){n.onEvent(t,a,function(){var n=e[o];return angular.isFunction(n)?n.apply(this,arguments):angular.isFunction(i[a])?i[a].apply(this,arguments):void 0})}(o[a],a)},linkSettings:function(e,n,t,i,o,a){var c=a||"settings";c in t&&e.$watch(c,function(e){o&&angular.forEach(e,function(e,t){n[i]("setting",t,e)}),o=!0},!0)},createBind:function(e,t){return{restrict:"A",link:function(i,o,a){n.linkSettings(i,o,a,t,!1,e),n.initBind(i,o,a,e,t)}}},initBind:function(e,n,t,i,o){n.ready(function(){var a={},c=t[i];c&&(a=e.$eval(c)),n[o](a)})},createBehavior:function(e,t,i){return{restrict:"A",link:function(o,a,c){n.initBehavior(o,c,e,a,t,i)}}},initBehavior:function(e,n,t,i,o,a){var c={$:void 0,evt:"click",enabled:!0,value:void 0},r=function(){c.enabled&&$(c.$)[o](a,c.value)},l=!1;e.$watch(n[t],function(e){angular.isString(e)?c.$=e:angular.isObject(e)&&(angular.isString(e.evt)||(e.evt=c.evt),angular.isDefined(e.enabled)||(e.enabled=c.enabled),c=e),l&&i.off(l,r),i.on(l=c.evt,r)},!0)},watcher:function(e,n,t,i,o,a){var c=angular.copy(e[n]);return e.$watch(n,function(e){"model"==n&&angular.equals(c,e)||t.call(i,e)},a),{set:function(t){(e[n]!=t||o)&&e.$evalAsync(function(){e[n]=t,c=angular.copy(e[n])})},update:function(){e.$evalAsync(function(){})}}},RecursiveCompiler:function(n){return function(t,i){angular.isFunction(i)&&(i={post:i});var o,a=t.contents().remove();return{pre:i&&i.pre?i.pre:null,post:function(t,c){o||(o=e(a)),o(t,function(e){c.append(e)}),i&&i.post&&i.post.apply(null,arguments),angular.isFunction(n)&&n.apply(null,arguments)}}}}};return n}function t(){return{restrict:"E",replace:!0,transclude:!0,template:'<button class="ui button" ng-transclude></button>'}}function i(){return{restrict:"E",replace:!0,transclude:!0,scope:{icon:"@"},template:'<a class="item"><i class="{{ icon }} icon" ng-if="icon"></i><span ng-transclude></span></a>'}}function o(){return{restrict:"E",replace:!0,template:['<div class="menu">','  <div class="item" ng-repeat="item in items" data-value="{{ getValue(item) }}" sm-html="label({item:item})"></div>',"</div>"].join("\n")}}function a(e){var n=function(e){return e};try{$sce=e.get("$sce"),n=function(e){return $sce.getTrustedHtml($sce.trustAsHtml(e))}}catch(t){}return function(e,t,i){e.$watch(i.smHtml,function(e){t.html(n(e||""))})}}e.factory("SemanticUI",["$compile",n]).directive("smButton",t).directive("smMenuItem",i).directive("smFlatMenu",o).directive("smHtml",["$injector",a])}(angular.module("semantic-ui-core",[])),function(e){function n(e){return e.createBind("giCheckboxBind","checkbox")}function t(e){return{restrict:"E",replace:!0,transclude:!0,scope:{model:"=",label:"@",settings:"=",enabled:"=",indeterminateValue:"=",checkedValue:"=",uncheckedValue:"=",children:"@",onInit:"=",onChange:"=",onChecked:"=",onIndeterminate:"=",onDeterminate:"=",onUnchecked:"=",onEnable:"=",onDisable:"="},template:['<div class="ui checkbox">','  <input type="checkbox">',"  <label>{{ label }}</label>","</div>"].join("\n"),link:e}}function i(e){return function(n,t,i){t.ready(function(){var o=n.settings||{};e.linkSettings(n,t,i,"checkbox",!0),e.triggerChange(n,"model",t,!0);var a=function(){return!angular.isDefined(n.checkedValue)||n.checkedValue},c=function(){return!!angular.isDefined(n.uncheckedValue)&&n.uncheckedValue},r=function(){return angular.isDefined(n.indeterminateValue)?n.indeterminateValue:void 0};if(i.enabled){var l=e.watcher(n,"enabled",function(e){angular.isDefined(e)&&t.checkbox(e?"set enabled":"set disabled")});e.onEvent(o,"onEnable",function(e){l.set(!0)}),e.onEvent(o,"onDisable",function(e){l.set(!1)})}var u=e.watcher(n,"model",function(e){angular.isDefined(e)&&t.checkbox(e?"set checked":"set unchecked")});if(e.onEvent(o,"onChecked",function(){u.set(a())}),e.onEvent(o,"onUnchecked",function(){u.set(c())}),e.onEvent(o,"onIndeterminate",function(){u.set(r())}),e.linkEvents(n,o,$.fn.checkbox.settings,{onChange:"onChange",onChecked:"onChecked",onIndeterminate:"onIndeterminate",onDeterminate:"onDeterminate",onUnchecked:"onUnchecked",onEnable:"onEnable",onDisable:"onDisable"}),n.children){var d=$(n.children),s=!1;e.onEvent(o,"onChecked",function(){s=!0,d.checkbox("check"),s=!1}),e.onEvent(o,"onUnchecked",function(){s=!0,d.checkbox("uncheck"),s=!1}),d.children("input[type=checkbox], input[type=radio]").change(function(){if(!s){var e=0;d.each(function(n,t){$(t).checkbox("is checked")&&e++}),0===e?t.checkbox("uncheck"):e===d.length?t.checkbox("check"):t.checkbox("indeterminate")}})}t.checkbox(o),n.model==a()?t.checkbox("set checked"):n.model===r()&&t.checkbox("set indeterminate"),angular.isDefined(n.enabled)&&!n.enabled&&t.checkbox("set disabled"),angular.isFunction(n.onInit)&&n.onInit(t)})}}e.factory("SemanticCheckboxLink",["SemanticUI",i]).directive("giCheckboxBind",["SemanticUI",n]).directive("giCheckbox",["SemanticCheckboxLink",t]);var o={giCheckboxToggle:"toggle",giCheckboxCheck:"check",giCheckboxUncheck:"uncheck",giCheckboxIndeterminate:"indeterminate",giCheckboxDeterminate:"determinate",giCheckboxEnable:"enable",giCheckboxDisable:"disable"};angular.forEach(o,function(n,t){e.directive(t,["SemanticUI",function(e){return e.createBehavior(t,"checkbox",n)}])})}(angular.module("semantic-ui-checkbox",["semantic-ui-core"])),function(e){function n(e){return e.createBind("giDropdownBind","dropdown")}function t(e){return{restrict:"E",replace:!0,transclude:!0,scope:{model:"=",items:"=",label:"&",value:"&",settings:"=",defaultText:"=",onInit:"=",emptyValue:"=",onChange:"=",onAdd:"=",onRemove:"=",onLabelCreate:"=",onLabelSelect:"=",onNoResults:"=",onShow:"=",onHide:"="},template:['<div class="ui dropdown">','<i class="dropdown icon"></i>','<div class="text" ng-class="::{default: hasDefault()}" sm-html="::getDefaultText()"></div>',"<sm-flat-menu></sm-flat-menu>","</div>"].join("\n"),controller:"SemanticDropdownController",link:e}}function i(e){var n={};e.getValue=function(n){return e.getKey(e.value({item:n}))},e.getKey=function(e){return(e?e.$$hashKey||e:e)+""},e.isEmpty=function(){return!e.model||0===e.model.length},e.translateValue=function(n){var t=e.getKey(n),i=e.findMatchingItem(t);if(angular.isDefined(i))return e.getValue(i)},e.hasDefault=function(){return e.defaultText&&e.isEmpty()},e.getDefaultText=function(){var n=e.defaultText?e.defaultText:"";return e.isEmpty()?n:e.translateValue(e.findMatchingItem(e.model))},e.findMatchingItem=function(e){return n[e]},e.updateHashMap=function(t){n={},angular.forEach(t,function(t){n[e.getValue(t)]=t})}}function o(e,n){return function(t,i,o){var a=function(e){n(function(){if(null===e)i.dropdown("clear");else if(e===!1);else if(i.dropdown("is multiple")){if(e instanceof Array){for(var n=[],o=0;o<e.length;o++){var a=t.translateValue(e[o]);angular.isDefined(a)&&n.push(a)}i.dropdown("set exactly",n)}}else i.dropdown("set selected",t.translateValue(e))},0)};e.setDefaultFunction(t,"label",o,function(e){return e.item}),e.setDefaultFunction(t,"value",o,function(e){return e.item}),i.ready(function(){var n=t.settings||{},c=!0;e.linkSettings(t,i,o,"dropdown",!0),e.triggerChange(t,"model",i,!0);var r=function(){return t.model instanceof Array||(t.model=t.model?[t.model]:[]),t.model},l=e.watcher(t,"model",function(e){a(e)},null,!0,!0);e.onEvent(n,"onChange",function(e){if(!c&&!i.dropdown("is multiple")){var n=t.findMatchingItem(e);if(angular.isDefined(n)){var o=t.value({item:n});l.set(o)}else i.dropdown("setting","allowAdditions")?l.set(e):l.set(t.emptyValue)}}),e.onEvent(n,"onAdd",function(e){if(!c){var n=t.findMatchingItem(e);if(angular.isDefined(n)){var o=t.value({item:n}),a=$.inArray(o,r());a===-1&&(t.model.push(o),l.update())}else i.dropdown("setting","allowAdditions")&&(t.model.push(e),l.update())}}),e.onEvent(n,"onRemove",function(e){if(!c){var n=t.findMatchingItem(e);if(angular.isDefined(n)){var i=t.value({item:n}),o=$.inArray(i,r());o!==-1&&(t.model.splice(o,1),l.update())}else{var o=$.inArray(e,r());o!==-1&&(t.model.splice(o,1),l.update())}}}),e.linkEvents(t,n,$.fn.dropdown.settings,{onChange:"onChange",onAdd:"onAdd",onRemove:"onRemove",onLabelCreate:"onLabelCreate",onLabelSelect:"onLabelSelect",onNoResults:"onNoResults",onShow:"onShow",onHide:"onHide"}),t.$watch("items",function(e){t.updateHashMap(t.items),a(t.model)},!0),i.dropdown(n),t.updateHashMap(t.items),a(t.model),i.dropdown("save defaults"),c=!1,angular.isFunction(t.onInit)&&t.onInit(i)})}}e.controller("SemanticDropdownController",["$scope",i]).factory("SemanticDropdownLink",["SemanticUI","$timeout",o]).directive("giDropdownBind",["SemanticUI",n]).directive("giDropdown",["SemanticDropdownLink",t]);var a={giDropdownToggle:"toggle",giDropdownShow:"show",giDropdownHide:"hide",giDropdownClear:"clear",giDropdownHideOthers:"hide others",giDropdownRestoreDefaults:"restore defaults",giDropdownRestoreDefaultText:"restore default text",giDropdownRestoreDefaultValue:"restore default value",giDropdownSaveDefaults:"save defaults",giDropdownSetSelected:"set selected",giDropdownSetText:"set text",giDropdownSetValue:"set value",giDropdownBindTouchEvents:"bind touch events",giDropdownMouseEvents:"mouse events",giDropdownBindIntent:"bind intent",giDropdownUnbindIntent:"unbind intent",giDropdownSetActive:"set active",giDropdownSetVisible:"set visible",giDropdownRemoveActive:"remove active",giDropdownRemoveVisible:"remove visible"};angular.forEach(a,function(n,t){e.directive(t,["SemanticUI",function(e){return e.createBehavior(t,"dropdown",n)}])})}(angular.module("semantic-ui-dropdown",["semantic-ui-core"])),function(e){function n(e){return e.createBind("giRadioBind","checkbox")}function t(e){return{restrict:"E",replace:!0,transclude:!0,scope:{model:"=",label:"@",name:"@",value:"=",settings:"=",enabled:"=",onInit:"=",onChange:"=",onChecked:"=",onUnchecked:"=",onEnable:"=",onDisable:"="},template:['<div class="ui radio checkbox">','  <input name="{{ name }}" type="radio">',"  <label>{{ label }}</label>","</div>"].join("\n"),link:e}}function i(e){return function(n,t,i){t.ready(function(){var o=n.settings||{};if(e.linkSettings(n,t,i,"checkbox",!0),e.triggerChange(n,"model",t,!0),i.enabled){var a=e.watcher(n,"enabled",function(e){angular.isDefined(e)&&t.checkbox(e?"set enabled":"set disabled")});e.onEvent(o,"onEnable",function(e){a.set(!0)}),e.onEvent(o,"onDisable",function(e){a.set(!1)})}var c=e.watcher(n,"model",function(e){e===n.value&&t.checkbox("set checked")});e.onEvent(o,"onChecked",function(){c.set(n.value)}),e.linkEvents(n,o,$.fn.checkbox.settings,{onChange:"onChange",onChecked:"onChecked",onUnchecked:"onUnchecked",onEnable:"onEnable",onDisable:"onDisable"}),t.checkbox(o),n.model===n.value&&t.checkbox("set checked"),t.hasClass("slider")&&t.removeClass("radio"),angular.isDefined(n.enabled)&&!n.enabled&&t.checkbox("set disabled"),angular.isFunction(n.onInit)&&n.onInit(t)})}}e.factory("SemanticRadioLink",["SemanticUI",i]).directive("giRadioBind",["SemanticUI",n]).directive("giRadio",["SemanticRadioLink",t]);var o={giRadioCheck:"check",giRadioEnable:"enable",giRadioDisable:"disable"};angular.forEach(o,function(n,t){e.directive(t,["SemanticUI",function(e){return e.createBehavior(t,"checkbox",n)}])})}(angular.module("semantic-ui-radio",["semantic-ui-core"]));
//# sourceMappingURL=gi-angular-semantic-ui.min.js.map
